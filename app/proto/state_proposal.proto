syntax = "proto3";

import "state.proto";

option go_package = "github.com/openware/state-channels/app/internal/proto";

service StateProposalService {
  // Public
  rpc Create(CreateRequest) returns (CreateResponse);
  // Public
  rpc SetFinal(StateProposalRequest) returns (EmptyProposalResponse);
  // Public
  rpc PendingLiability(LiabilityRequest) returns (EmptyProposalResponse);
  // Public
  rpc ExecutedLiability(LiabilityRequest) returns (EmptyProposalResponse);
  // Public
  rpc RevertLiability(LiabilityRequest) returns (EmptyProposalResponse);
  // Public
  rpc ApproveLiabilities(StateProposalRequest) returns (EmptyProposalResponse);
}

message StateProposal {
  State state = 1;
  bytes liability_state = 2;
}

message CreateRequest {
  State state = 1;
}

message CreateResponse {
  StateProposal state_proposal = 1;
}

message LiabilityRequest {
  uint64 from = 1;
  uint64 to = 2;
  string asset = 3;
  string amount = 4;
  StateProposal state_proposal = 5;
}

message StateProposalRequest {
  StateProposal state_proposal = 1;
}

message EmptyProposalResponse {
}
